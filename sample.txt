('clojure-koans', ['.git', 'resources', 'script', 'src', 'target'], ['.gitignore', '.lein-repl-history', 'epl-v10.html', 'ideaboard.txt', 'project.clj', 'README.md', 'sample.txt'])
('clojure-koans/.git', ['branches', 'hooks', 'info', 'logs', 'objects', 'refs'], ['config', 'description', 'HEAD', 'index', 'packed-refs'])
('clojure-koans/.git/branches', [], [])
('clojure-koans/.git/hooks', [], ['applypatch-msg.sample', 'commit-msg.sample', 'post-update.sample', 'pre-applypatch.sample', 'pre-commit.sample', 'pre-push.sample', 'pre-rebase.sample', 'prepare-commit-msg.sample', 'update.sample'])
('clojure-koans/.git/info', [], ['exclude'])
('clojure-koans/.git/logs', ['refs'], ['HEAD'])
('clojure-koans/.git/logs/refs', ['heads', 'remotes'], [])
('clojure-koans/.git/logs/refs/heads', [], ['master'])
('clojure-koans/.git/logs/refs/remotes', ['origin'], [])
('clojure-koans/.git/logs/refs/remotes/origin', [], ['HEAD'])
('clojure-koans/.git/objects', ['info', 'pack'], [])
('clojure-koans/.git/objects/info', [], [])
('clojure-koans/.git/objects/pack', [], ['pack-cc85d88572eac2ebcbc13e5f2e9fea647c8f2568.idx', 'pack-cc85d88572eac2ebcbc13e5f2e9fea647c8f2568.pack'])
('clojure-koans/.git/refs', ['heads', 'remotes', 'tags'], [])
('clojure-koans/.git/refs/heads', [], ['master'])
('clojure-koans/.git/refs/remotes', ['origin'], [])
('clojure-koans/.git/refs/remotes/origin', [], ['HEAD'])
('clojure-koans/.git/refs/tags', [], [])
('clojure-koans/resources', [], ['koans.clj'])
('clojure-koans/script', [], ['deploy.sh', 'repl', 'repl.bat', 'run', 'run.bat', 'run.clj', 'test', 'test.bat', 'test.clj'])
('clojure-koans/src', ['koans'], [])
('clojure-koans/src/koans', [], ['01_equalities.clj', '02_lists.clj', '03_vectors.clj', '04_sets.clj', '05_maps.clj', '06_functions.clj', '07_conditionals.clj', '08_higher_order_functions.clj', '09_runtime_polymorphism.clj', '10_lazy_sequences.clj', '11_sequence_comprehensions.clj', '12_creating_functions.clj', '13_recursion.clj', '14_destructuring.clj', '15_refs.clj', '16_atoms.clj', '17_macros.clj', '18_datatypes.clj', '19_java_interop.clj', '20_partition.clj', '21_group_by.clj'])
('clojure-koans/target', ['classes', 'stale'], [])
('clojure-koans/target/classes', [], [])
('clojure-koans/target/stale', [], ['extract-native.dependencies'])
